name: Deploy Workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  style-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: |
          pip install flake8
          pip install isort

      - name: Run flake8
        run: flake8 .

      - name: Run isort
        run: isort . --check --diff
  build_and_push_to_docker_hub:
    needs: style-check
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        if: ${{ github.repository == 'alexseipopov/consumer_actualizator_service' && github.ref == 'refs/heads/main' }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ github.repository == 'alexseipopov/consumer_actualizator_service' && github.ref == 'refs/heads/main' }}
      - name: Login to Docker
        uses: docker/login-action@v1
        if: ${{ github.repository == 'alexseipopov/consumer_actualizator_service' && github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create .env_docker
        run: |
            echo "${{ secrets.MY_ENV_VAR }}" > .env_docker
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        if: ${{ github.repository == 'alexseipopov/consumer_actualizator_service' && github.ref == 'refs/heads/main' }}
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/consumer_actualizator_service:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            docker pull alexseipopov/consumer_actualizator_service:latest
            docker-compose -f ~/capybaras/docker-compose.yml up --no-deps --build -d consumer_actualizator_service